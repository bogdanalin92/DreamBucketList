rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Base rules
    match /{document=**} {
      // Deny access by default
      allow read, write: if false;
    }
    
    // Admins collection - only accessible to authenticated users in this collection
    match /admins/{userId} {
      allow read: if request.auth != null && 
                  (request.auth.uid == userId || 
                  exists(/databases/$(database)/documents/admins/$(request.auth.uid)));
      // Only existing admins can create new admins
      allow write: if request.auth != null && 
                   exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Admin-only settings collection
    match /admin_settings/{document=**} {
      allow read, write: if request.auth != null && 
                           exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Regular bucket list items
    match /bucket_list_items/{itemId} {
      // Allow read if the user ID matches the document's user ID
      allow read: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
      
      // Allow create if the user is authenticated and setting their own user ID
      allow create: if request.auth != null && 
                     request.resource.data.userId == request.auth.uid;
      
      // Allow update/delete if the user is authenticated and owns the document
      allow update, delete: if request.auth != null && 
                             resource.data.userId == request.auth.uid;
                             
      // Admins can read all bucket list items
      allow read: if request.auth != null && 
                   exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // User profile rules 
    match /users/{userId} {
      // Anyone authenticated can read basic profile info
      allow read: if request.auth != null;
      
      // Users can only write their own profile
      allow write: if request.auth != null && 
                    userId == request.auth.uid;
    }
    
    // Shared items collection
    match /shared_items/{itemId} {
      // Anyone can read shared items
      allow read: if request.auth != null;
      
      // Only owner can update or delete
      allow create: if request.auth != null && 
                     request.resource.data.userId == request.auth.uid;
      allow update, delete: if request.auth != null && 
                             resource.data.userId == request.auth.uid;
    }

    function hasThirdPartyConsent() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.privacyConsent.thirdPartyShareConsent == true;
    }

    function hasAnalyticsConsent() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.privacyConsent.analyticsConsent == true;
    }

    // User data collection rules
    match /users/{userId} {
      // Users can read and write their own data
      allow read, write: if request.auth != null && userId == request.auth.uid;
      
      // Admin access
      allow read: if request.auth != null && 
                   exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Bucket list items rules
    match /bucket_list/{itemId} {
      // Basic read access
      allow read: if request.auth != null && 
                   resource.data.userId == request.auth.uid;
      
      // Create with proper ownership
      allow create: if request.auth != null && 
                     request.resource.data.userId == request.auth.uid;
      
      // Update/delete only by owner
      allow update, delete: if request.auth != null && 
                             resource.data.userId == request.auth.uid;
                             
      // Third-party data access requires explicit consent
      allow read: if hasThirdPartyConsent() && 
                   exists(/databases/$(database)/documents/third_party_access/$(request.auth.uid));
    }

    // Analytics collection rules
    match /analytics/{docId} {
      allow read, write: if hasAnalyticsConsent();
    }

    // Shared items collection
    match /shared_items/{itemId} {
      // Anyone can read shared items if they have sharing consent
      allow read: if request.auth != null && 
                   (resource.data.userId == request.auth.uid || hasThirdPartyConsent());
      
      // Only owner can modify
      allow write: if request.auth != null && 
                    request.resource.data.userId == request.auth.uid;
    }
  }
}